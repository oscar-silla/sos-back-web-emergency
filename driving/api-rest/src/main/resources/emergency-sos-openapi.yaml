openapi: 3.0.1
info:
  title: SOS Emergency API
  description: SOS Emergency API
  version: 1.0.0
tags:
  - name: Contacts
paths:
  /contacts:
    post:
      summary: Create a new contact.
      operationId: postContact
      tags:
        - Contacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactRequestBodyType"
      responses:
        '201':
          description: CREATED SUCCESSFULLY
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
    get:
      summary: Get all contacts.
      operationId: getContacts
      tags:
        - Contacts
      parameters:
        - $ref: "#/components/parameters/pageSizeQueryParam"
        - $ref: "#/components/parameters/pageNumberQueryParam"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactsResponseType"
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
  /contacts/{id}:
    patch:
      summary: Modify a new contact.
      operationId: putContact
      tags:
        - Contacts
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      responses:
        '200':
          description: OK
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
    get:
      summary: Get contact by id.
      operationId: getContact
      tags:
        - Contacts
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactResponseType"
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseType"
components:
  schemas:
    ContactsResponseType:
      type: object
      required:
        - results
        - pagination
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/ContactResponseType"
        pagination:
          $ref: "#/components/schemas/PaginationResponseType"
    ContactResponseType:
      type: object
      required:
        - id
        - name
        - phoneNumber
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          format: string
          example: name
        phoneNumber:
          type: string
          format: string
          example: +34 666 666 666
    ContactRequestBodyType:
      type: object
      properties:
        name:
          type: string
          format: string
          example: name
        phoneNumber:
          type: string
          format: string
          example: +34 666 666 666
    PaginationResponseType:
      type: object
      required:
        - pageNumber
        - pageSize
        - totalResults
      properties:
        pageNumber:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 10
        totalResults:
          type: integer
          format: int32
          example: 100
    ErrorResponseType:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          format: string
          example: Internal Server Error
  parameters:
    pageSizeQueryParam:
      in: query
      name: pageSize
      schema:
        type: integer
        default: 10
      required: false
    pageNumberQueryParam:
      in: query
      name: pageNumber
      schema:
        type: integer
        default: 1
      required: false
    idPathParam:
      in: path
      name: id
      schema:
        type: integer
        format: int64
      required: true